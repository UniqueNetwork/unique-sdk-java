/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package network.unique.model

import network.unique.model.CollectionLimitsDto
import network.unique.model.CollectionPermissionsDto
import network.unique.model.CollectionProperty
import network.unique.model.CollectionSponsorship
import network.unique.model.PropertyKeyPermission

import com.squareup.moshi.Json

/**
 * 
 *
 * @param name 
 * @param description 
 * @param tokenPrefix 
 * @param address The ss-58 encoded address
 * @param mode 
 * @param sponsorship 
 * @param limits 
 * @param metaUpdatePermission 
 * @param permissions 
 * @param readOnly 
 * @param baseURI 
 * @param properties 
 * @param tokenPropertyPermissions 
 */


data class CreateERC721CollectionBody (

    @Json(name = "name")
    val name: kotlin.String,

    @Json(name = "description")
    val description: kotlin.String? = null,

    @Json(name = "tokenPrefix")
    val tokenPrefix: kotlin.String? = null,

    /* The ss-58 encoded address */
    @Json(name = "address")
    val address: kotlin.String? = null,

    @Json(name = "mode")
    val mode: CreateERC721CollectionBody.Mode? = null,

    @Json(name = "sponsorship")
    val sponsorship: CollectionSponsorship? = null,

    @Json(name = "limits")
    val limits: CollectionLimitsDto? = null,

    @Json(name = "metaUpdatePermission")
    val metaUpdatePermission: CreateERC721CollectionBody.MetaUpdatePermission? = null,

    @Json(name = "permissions")
    val permissions: CollectionPermissionsDto? = null,

    @Json(name = "readOnly")
    val readOnly: kotlin.Boolean? = null,

    @Json(name = "baseURI")
    val baseURI: kotlin.String? = null,

    @Json(name = "properties")
    val properties: kotlin.collections.List<CollectionProperty>? = null,

    @Json(name = "tokenPropertyPermissions")
    val tokenPropertyPermissions: kotlin.collections.List<PropertyKeyPermission>? = null,

    @Json(name = "signerPayloadJSON")
    val signerPayloadJSON: SignerPayloadJSONDto? = null,

    /* Warning: Signature must be with SignatureType! */
    @Json(name = "signature")
    val signature: kotlin.String? = null,

    @Json(name = "signerPayloadRaw")
    val signerPayloadRaw: SignerPayloadRawDto? = null,

    @Json(name = "signerPayloadHex")
    val signerPayloadHex: kotlin.String? = null,

    @Json(name = "fee")
    val fee: FeeResponse? = null

) {

    /**
     * 
     *
     * Values: nFT,fungible,reFungible
     */
    enum class Mode(val value: kotlin.String) {
        @Json(name = "NFT") nFT("NFT"),
        @Json(name = "Fungible") fungible("Fungible"),
        @Json(name = "ReFungible") reFungible("ReFungible");
    }
    /**
     * 
     *
     * Values: itemOwner,admin,none
     */
    enum class MetaUpdatePermission(val value: kotlin.String) {
        @Json(name = "ItemOwner") itemOwner("ItemOwner"),
        @Json(name = "Admin") admin("Admin"),
        @Json(name = "None") none("None");
    }
}

